Search.setIndex({"docnames": ["index", "ope/index", "overview/index"], "filenames": ["index.rst", "ope/index.rst", "overview/index.rst"], "titles": ["Welcome to Hopes!", "Off-Policy Evaluation: Estimators", "Overview of Hopes package"], "terms": {"x": 1, "invers": 1, "probabl": 1, "weight": 1, "ipw": 1, "self": 1, "normal": 1, "snipw": 1, "direct": 1, "method": 1, "dm": 1, "doubli": 1, "robust": 1, "dr": 1, "trajectori": 1, "wise": 1, "import": 1, "sampl": 1, "twi": 1, "per": 1, "decis": 1, "pdi": 1, "class": 1, "hope": 1, "op": 1, "inverseprobabilityweight": 1, "base": 1, "baseestim": 1, "v_": 1, "pi_e": 1, "d": 1, "frac": 1, "1": 1, "n": 1, "sum_": 1, "t": 1, "p": 1, "s_t": 1, "a_t": 1, "r_t": 1, "where": 1, "i": 1, "offlin": 1, "collect": 1, "dataset": 1, "defin": 1, "pi_b": 1, "target": 1, "behavior": 1, "reward": 1, "observ": 1, "time": 1, "number": 1, "thi": 1, "ha": 1, "gener": 1, "high": 1, "varianc": 1, "especi": 1, "small": 1, "can": 1, "improv": 1, "us": [1, 2], "refer": 1, "http": [1, 2], "scholarwork": 1, "umass": 1, "edu": 1, "cgi": 1, "viewcont": 1, "articl": 1, "1079": 1, "context": 1, "cs_faculty_pub": 1, "estimate_policy_valu": 1, "float": 1, "valu": 1, "selfnormalizedinverseprobabilityweight": 1, "paper": 1, "nip": 1, "cc": 1, "paper_fil": 1, "2015": 1, "hash": 1, "39027dfad5138c9ca0c474d71db915c3": 1, "abstract": 1, "html": 1, "essenti": 1, "avoid": 1, "directmethod": 1, "q_model_cl": 1, "type": 1, "regressionbasedrewardmodel": 1, "behavior_policy_ob": 1, "ndarrai": 1, "behavior_policy_act": 1, "behavior_policy_reward": 1, "steps_per_episod": 1, "int": 1, "q_model_typ": 1, "str": 1, "random_forest": 1, "q_model_param": 1, "dict": 1, "none": 1, "q": 1, "A": 1, "s_0": 1, "model": 1, "train": 1, "expect": 1, "initi": 1, "state": 1, "under": 1, "action": 1, "taken": 1, "set": 1, "supervis": 1, "learn": 1, "The": 1, "perform": 1, "depend": 1, "qualiti": 1, "check_paramet": 1, "check": 1, "paramet": 1, "ar": 1, "valid": 1, "plu": 1, "addit": 1, "fit": 1, "return": 1, "statist": 1, "To": 1, "you": 1, "need": 1, "subclass": 1, "It": 1, "should": 1, "function": 1, "below": 1, "document": 1, "abc": 1, "all": 1, "call": 1, "befor": 1, "overridden": 1, "add": 1, "have": 1, "sever": 1, "assumpt": 1, "must": 1, "met": 1, "coverag": 1, "non": 1, "zero": 1, "take": 1, "100": 1, "necessari": 1, "e": 1, "both": 1, "an": 1, "some": 1, "we": 1, "enforc": 1, "here": 1, "numer": 1, "issu": 1, "posit": 1, "neg": 1, "abl": 1, "get": 1, "lower": 1, "bound": 1, "specif": 1, "set_paramet": 1, "target_policy_action_prob": 1, "behavior_policy_action_prob": 1, "receiv": 1, "support": 2, "python": 2, "version": 2, "3": 2, "10": 2, "from": 2, "pypi": 2, "pip": 2, "sourc": 2, "develop": 2, "git": 2, "clone": 2, "github": 2, "com": 2, "airboxlab": 2, "cd": 2, "poetri": 2, "r": 2, "requir": 2, "txt": 2}, "objects": {"hopes.ope.estimators": [[1, 0, 1, "", "BaseEstimator"], [1, 0, 1, "", "DirectMethod"], [1, 0, 1, "", "InverseProbabilityWeighting"], [1, 0, 1, "", "SelfNormalizedInverseProbabilityWeighting"]], "hopes.ope.estimators.BaseEstimator": [[1, 1, 1, "", "check_parameters"], [1, 1, 1, "", "estimate_policy_value"], [1, 1, 1, "", "set_parameters"]], "hopes.ope.estimators.DirectMethod": [[1, 1, 1, "", "check_parameters"], [1, 1, 1, "", "estimate_policy_value"], [1, 1, 1, "", "fit"]], "hopes.ope.estimators.InverseProbabilityWeighting": [[1, 1, 1, "", "estimate_policy_value"]], "hopes.ope.estimators.SelfNormalizedInverseProbabilityWeighting": [[1, 1, 1, "", "estimate_policy_value"]]}, "objtypes": {"0": "py:class", "1": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"]}, "titleterms": {"off": 1, "polici": 1, "evalu": 1, "estim": 1, "roadmap": 1, "implement": 1, "new": 1, "overview": 2, "hope": 2, "packag": 2, "what": 2, "": 2, "box": 2, "instal": 2}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Off-Policy Evaluation: Estimators": [[1, "off-policy-evaluation-estimators"]], "Roadmap": [[1, "roadmap"]], "Implemented estimators": [[1, "implemented-estimators"]], "Implementing a new estimator": [[1, "implementing-a-new-estimator"]], "Overview of Hopes package": [[2, "overview-of-hopes-package"]], "What\u2019s in the box?": [[2, "what-s-in-the-box"]], "Installation": [[2, "installation"]]}, "indexentries": {"baseestimator (class in hopes.ope.estimators)": [[1, "hopes.ope.estimators.BaseEstimator"]], "directmethod (class in hopes.ope.estimators)": [[1, "hopes.ope.estimators.DirectMethod"]], "inverseprobabilityweighting (class in hopes.ope.estimators)": [[1, "hopes.ope.estimators.InverseProbabilityWeighting"]], "selfnormalizedinverseprobabilityweighting (class in hopes.ope.estimators)": [[1, "hopes.ope.estimators.SelfNormalizedInverseProbabilityWeighting"]], "check_parameters() (hopes.ope.estimators.baseestimator method)": [[1, "hopes.ope.estimators.BaseEstimator.check_parameters"]], "check_parameters() (hopes.ope.estimators.directmethod method)": [[1, "hopes.ope.estimators.DirectMethod.check_parameters"]], "estimate_policy_value() (hopes.ope.estimators.baseestimator method)": [[1, "hopes.ope.estimators.BaseEstimator.estimate_policy_value"]], "estimate_policy_value() (hopes.ope.estimators.directmethod method)": [[1, "hopes.ope.estimators.DirectMethod.estimate_policy_value"]], "estimate_policy_value() (hopes.ope.estimators.inverseprobabilityweighting method)": [[1, "hopes.ope.estimators.InverseProbabilityWeighting.estimate_policy_value"]], "estimate_policy_value() (hopes.ope.estimators.selfnormalizedinverseprobabilityweighting method)": [[1, "hopes.ope.estimators.SelfNormalizedInverseProbabilityWeighting.estimate_policy_value"]], "fit() (hopes.ope.estimators.directmethod method)": [[1, "hopes.ope.estimators.DirectMethod.fit"]], "set_parameters() (hopes.ope.estimators.baseestimator method)": [[1, "hopes.ope.estimators.BaseEstimator.set_parameters"]]}})